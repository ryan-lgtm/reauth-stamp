{
    "info": {
      "_postman_id": "c8a25e98-6650-4b28-93f4-6a23e83d41f8",
      "name": "ReAuth-Stamp MFA API",
      "description": "A collection for interacting with the ReAuth-Stamp MFA API service that securely manages TOTP tokens.",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "name": "Authentication",
        "description": "Endpoints for API token management",
        "item": [
          {
            "name": "Create API Token (Expires)",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer {{masterToken}}"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"name\": \"Application Token\",\n  \"userId\": \"{{userId}}\",\n  \"expiresInDays\": 30\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/api/auth/tokens",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "api",
                  "auth",
                  "tokens"
                ]
              },
              "description": "Creates a new API token with expiration. This operation requires a master token."
            },
            "response": [
              {
                "name": "Success Response",
                "originalRequest": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Authorization",
                      "value": "Bearer {{masterToken}}"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"name\": \"Application Token\",\n  \"userId\": \"user123\",\n  \"expiresInDays\": 30\n}"
                  },
                  "url": {
                    "raw": "{{baseUrl}}/api/auth/tokens",
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "path": [
                      "api",
                      "auth",
                      "tokens"
                    ]
                  }
                },
                "status": "Created",
                "code": 201,
                "_postman_previewlanguage": "json",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "cookie": [],
                "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"tokenId\",\n    \"name\": \"Application Token\",\n    \"token\": \"generated-uuid-token\",\n    \"expiresAt\": \"2023-07-15T00:00:00.000Z\",\n    \"createdAt\": \"2023-06-15T00:00:00.000Z\",\n    \"master\": false\n  }\n}"
              }
            ]
          },
          {
            "name": "Create API Token (Never Expires)",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer {{masterToken}}"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"name\": \"Permanent Token\",\n  \"userId\": \"{{userId}}\"\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/api/auth/tokens",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "api",
                  "auth",
                  "tokens"
                ]
              },
              "description": "Creates a new API token that never expires. This operation requires a master token."
            },
            "response": [
              {
                "name": "Success Response",
                "originalRequest": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Authorization",
                      "value": "Bearer {{masterToken}}"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"name\": \"Permanent Token\",\n  \"userId\": \"user123\"\n}"
                  },
                  "url": {
                    "raw": "{{baseUrl}}/api/auth/tokens",
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "path": [
                      "api",
                      "auth",
                      "tokens"
                    ]
                  }
                },
                "status": "Created",
                "code": 201,
                "_postman_previewlanguage": "json",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "cookie": [],
                "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"tokenId\",\n    \"name\": \"Permanent Token\",\n    \"token\": \"generated-uuid-token\",\n    \"expiresAt\": null,\n    \"createdAt\": \"2023-06-15T00:00:00.000Z\",\n    \"master\": false\n  }\n}"
              }
            ]
          },
          {
            "name": "Reset Master Token",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{masterToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/auth/tokens/{{tokenId}}/reset-master",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "api",
                  "auth",
                  "tokens",
                  "{{tokenId}}",
                  "reset-master"
                ]
              },
              "description": "Resets a master token with a new token value. This requires another master token for authorization."
            },
            "response": [
              {
                "name": "Success Response",
                "originalRequest": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{masterToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/api/auth/tokens/{{tokenId}}/reset-master",
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "path": [
                      "api",
                      "auth",
                      "tokens",
                      "{{tokenId}}",
                      "reset-master"
                    ]
                  }
                },
                "status": "OK",
                "code": 200,
                "_postman_previewlanguage": "json",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "cookie": [],
                "body": "{\n  \"success\": true,\n  \"message\": \"Master token reset successfully\",\n  \"data\": {\n    \"id\": \"masterTokenId\",\n    \"name\": \"Master Token\",\n    \"token\": \"new-token-value\",\n    \"createdAt\": \"2023-06-15T00:00:00.000Z\"\n  }\n}"
              }
            ]
          },
          {
            "name": "List User Tokens",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{apiToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/auth/tokens/{{userId}}",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "api",
                  "auth",
                  "tokens",
                  "{{userId}}"
                ]
              },
              "description": "Lists all tokens for the specified user. User can only view their own tokens."
            },
            "response": [
              {
                "name": "Success Response",
                "originalRequest": {
                  "method": "GET",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{apiToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/api/auth/tokens/{{userId}}",
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "path": [
                      "api",
                      "auth",
                      "tokens",
                      "{{userId}}"
                    ]
                  }
                },
                "status": "OK",
                "code": 200,
                "_postman_previewlanguage": "json",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "cookie": [],
                "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"tokenId\",\n      \"name\": \"Application Token\",\n      \"lastUsed\": \"2023-06-15T00:00:00.000Z\",\n      \"expiresAt\": \"2023-07-15T00:00:00.000Z\",\n      \"createdAt\": \"2023-06-15T00:00:00.000Z\",\n      \"isActive\": true,\n      \"master\": false\n    },\n    {\n      \"id\": \"permanentTokenId\",\n      \"name\": \"Permanent Token\",\n      \"lastUsed\": \"2023-06-15T00:00:00.000Z\",\n      \"expiresAt\": null,\n      \"createdAt\": \"2023-06-15T00:00:00.000Z\",\n      \"isActive\": true,\n      \"master\": false\n    },\n    {\n      \"id\": \"masterTokenId\",\n      \"name\": \"Master Token\",\n      \"lastUsed\": \"2023-06-15T00:00:00.000Z\",\n      \"expiresAt\": null,\n      \"createdAt\": \"2023-06-15T00:00:00.000Z\",\n      \"isActive\": true,\n      \"master\": true\n    }\n  ]\n}"
              }
            ]
          },
          {
            "name": "Revoke Token",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{apiToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/auth/tokens/{{tokenId}}/revoke",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "api",
                  "auth",
                  "tokens",
                  "{{tokenId}}",
                  "revoke"
                ]
              },
              "description": "Revokes (deactivates) the specified token. User can only revoke their own tokens."
            },
            "response": [
              {
                "name": "Success Response",
                "originalRequest": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{apiToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/api/auth/tokens/{{tokenId}}/revoke",
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "path": [
                      "api",
                      "auth",
                      "tokens",
                      "{{tokenId}}",
                      "revoke"
                    ]
                  }
                },
                "status": "OK",
                "code": 200,
                "_postman_previewlanguage": "json",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "cookie": [],
                "body": "{\n  \"success\": true,\n  \"message\": \"Token revoked successfully\"\n}"
              }
            ]
          },
          {
            "name": "Validate Token",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{apiToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/auth/validate",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "api",
                  "auth",
                  "validate"
                ]
              },
              "description": "Validates the current token and returns its metadata if valid."
            },
            "response": [
              {
                "name": "Success Response",
                "originalRequest": {
                  "method": "GET",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{apiToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/api/auth/validate",
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "path": [
                      "api",
                      "auth",
                      "validate"
                    ]
                  }
                },
                "status": "OK",
                "code": 200,
                "_postman_previewlanguage": "json",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "cookie": [],
                "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"tokenId\",\n    \"userId\": \"user123\",\n    \"name\": \"Application Token\",\n    \"expiresAt\": \"2023-07-15T00:00:00.000Z\"\n  }\n}"
              }
            ]
          }
        ]
      },
      {
        "name": "MFA Management",
        "description": "Endpoints for managing MFA secrets and codes",
        "item": [
          {
            "name": "Create MFA Secret",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer {{apiToken}}"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"name\": \"Google Account\",\n  \"initialAuth\": \"JBSWY3DPEHPK3PXP\"\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/api/mfa",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "api",
                  "mfa"
                ]
              },
              "description": "Creates a new MFA secret entry."
            },
            "response": [
              {
                "name": "Success Response",
                "originalRequest": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Authorization",
                      "value": "Bearer {{apiToken}}"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"name\": \"Google Account\",\n  \"initialAuth\": \"JBSWY3DPEHPK3PXP\"\n}"
                  },
                  "url": {
                    "raw": "{{baseUrl}}/api/mfa",
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "path": [
                      "api",
                      "mfa"
                    ]
                  }
                },
                "status": "Created",
                "code": 201,
                "_postman_previewlanguage": "json",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "cookie": [],
                "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"mfaSecretId\",\n    \"name\": \"Google Account\",\n    \"createdAt\": \"2023-06-15T00:00:00.000Z\"\n  }\n}"
              }
            ]
          },
          {
            "name": "Get MFA Code",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{apiToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/mfa/{{mfaSecretId}}/code",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "api",
                  "mfa",
                  "{{mfaSecretId}}",
                  "code"
                ]
              },
              "description": "Generates and returns the current TOTP code for the specified MFA secret."
            },
            "response": [
              {
                "name": "Success Response",
                "originalRequest": {
                  "method": "GET",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{apiToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/api/mfa/{{mfaSecretId}}/code",
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "path": [
                      "api",
                      "mfa",
                      "{{mfaSecretId}}",
                      "code"
                    ]
                  }
                },
                "status": "OK",
                "code": 200,
                "_postman_previewlanguage": "json",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "cookie": [],
                "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"mfaSecretId\",\n    \"name\": \"Google Account\",\n    \"code\": \"123456\",\n    \"validUntil\": \"2023-06-15T00:00:30.000Z\"\n  }\n}"
              }
            ]
          },
          {
            "name": "List MFA Secrets",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{apiToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/mfa",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "api",
                  "mfa"
                ]
              },
              "description": "Lists all MFA secrets for the authenticated user."
            },
            "response": [
              {
                "name": "Success Response",
                "originalRequest": {
                  "method": "GET",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{apiToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/api/mfa",
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "path": [
                      "api",
                      "mfa"
                    ]
                  }
                },
                "status": "OK",
                "code": 200,
                "_postman_previewlanguage": "json",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "cookie": [],
                "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"_id\": \"mfaSecretId\",\n      \"name\": \"Google Account\",\n      \"createdAt\": \"2023-06-15T00:00:00.000Z\",\n      \"updatedAt\": \"2023-06-15T00:00:00.000Z\"\n    }\n  ]\n}"
              }
            ]
          },
          {
            "name": "Delete MFA Secret",
            "request": {
              "method": "DELETE",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{apiToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/mfa/{{mfaSecretId}}",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "api",
                  "mfa",
                  "{{mfaSecretId}}"
                ]
              },
              "description": "Deletes the specified MFA secret."
            },
            "response": [
              {
                "name": "Success Response",
                "originalRequest": {
                  "method": "DELETE",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{apiToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/api/mfa/{{mfaSecretId}}",
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "path": [
                      "api",
                      "mfa",
                      "{{mfaSecretId}}"
                    ]
                  }
                },
                "status": "OK",
                "code": 200,
                "_postman_previewlanguage": "json",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "cookie": [],
                "body": "{\n  \"success\": true,\n  \"message\": \"MFA secret deleted successfully\"\n}"
              }
            ]
          }
        ]
      },
      {
        "name": "Health Check",
        "request": {
          "method": "GET",
          "header": [],
          "url": {
            "raw": "{{baseUrl}}/health",
            "host": [
              "{{baseUrl}}"
            ],
            "path": [
              "health"
            ]
          },
          "description": "Checks if the API service is up and running."
        },
        "response": [
          {
            "name": "Success Response",
            "originalRequest": {
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{baseUrl}}/health",
                "host": [
                  "{{baseUrl}}"
                ],
                "path": [
                  "health"
                ]
              }
            },
            "status": "OK",
            "code": 200,
            "_postman_previewlanguage": "json",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "cookie": [],
            "body": "{\n  \"status\": \"UP\"\n}"
          }
        ]
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "type": "text/javascript",
          "exec": [
            ""
          ]
        }
      },
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "// Automatically capture tokens, IDs, etc. from responses",
            "if (responseCode.code === 200 || responseCode.code === 201) {",
            "    var responseJson = pm.response.json();",
            "    ",
            "    // Save token ID if present in response",
            "    if (responseJson.data && responseJson.data.id) {",
            "        if (pm.request.url.path[1] === 'auth' && pm.request.url.path[2] === 'tokens') {",
            "            pm.environment.set('tokenId', responseJson.data.id);",
            "        }",
            "    }",
            "    ",
            "    // Save MFA secret ID if present in response",
            "    if (responseJson.data && responseJson.data.id && pm.request.url.path[1] === 'mfa' && !pm.request.url.path[3]) {",
            "        pm.environment.set('mfaSecretId', responseJson.data.id);",
            "    }",
            "    ",
            "    // Save API token if this is a token creation response",
            "    if (responseJson.data && responseJson.data.token && pm.request.method === 'POST') {",
            "        pm.environment.set('apiToken', responseJson.data.token);",
            "    }",
            "}",
            "",
            "// Basic response validation",
            "pm.test(\"Status code is 2xx\", function () {",
            "    pm.response.to.be.success;",
            "});",
            "",
            "pm.test(\"Response has success property\", function () {",
            "    const responseJson = pm.response.json();",
            "    pm.expect(responseJson).to.have.property('success');",
            "});"
          ]
        }
      }
    ],
    "variable": [
      {
        "key": "baseUrl",
        "value": "http://localhost:3000",
        "type": "string",
        "description": "The base URL of your API"
      },
      {
        "key": "masterToken",
        "value": "your-master-token",
        "type": "string",
        "description": "Master token for creating new tokens (obtain using init-master-token script)"
      },
      {
        "key": "apiToken",
        "value": "your-api-token",
        "type": "string",
        "description": "API token for normal operations"
      },
      {
        "key": "userId",
        "value": "user123",
        "type": "string",
        "description": "User ID for operations"
      },
      {
        "key": "tokenId",
        "value": "",
        "type": "string",
        "description": "ID of token to manage"
      },
      {
        "key": "mfaSecretId",
        "value": "",
        "type": "string",
        "description": "ID of MFA secret to manage"
      },
      {
        "key": "masterTokenId",
        "value": "",
        "type": "string",
        "description": "ID of a master token to reset"
      }
    ]
  }